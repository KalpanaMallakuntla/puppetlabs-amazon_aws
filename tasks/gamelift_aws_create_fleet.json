{
	"description": "Creates a new fleet to run your game servers. A fleet is a set of Amazon Elastic Compute Cloud (Amazon EC2) instances, each of which can run multiple server processes to host game sessions. You set up a fleet to use instances with certain hardware specifications (see Amazon EC2 Instance Types), and deploy your game build to the fleet.  To create a new fleet, you must provide the following: (1) a fleet name, (2) an EC2 instance type, (3) the build ID for your game build, and (4) a run-time configuration, which specifies the server processes to run on each instance in the fleet. If fleet type is not set, the new fleet will use on-demand instances by default. If the CreateFleet call is successful, Amazon GameLift performs the following tasks. You can track the process of a fleet by checking the fleet status or by monitoring fleet creation events:   Creates a fleet record. Status: NEW.   Begins writing events to the fleet event log, which can be accessed in the Amazon GameLift console. Sets the fleet's target capacity to 1 (desired instances), which triggers Amazon GameLift to start one new EC2 instance.   Downloads the game build to the new instance and installs it. Statuses: DOWNLOADING, VALIDATING, BUILDING.    Starts launching server processes on the instance. If the fleet is configured to run multiple server processes per instance, Amazon GameLift staggers each launch by a few seconds. Status: ACTIVATING.   Sets the fleet's status to ACTIVE as soon as one server process is ready to host a game session.    Learn more    Working with Fleets.  Related operations     CreateFleet     ListFleets     DeleteFleet    Describe fleets:    DescribeFleetAttributes     DescribeFleetCapacity     DescribeFleetPortSettings     DescribeFleetUtilization     DescribeRuntimeConfiguration     DescribeEC2InstanceLimits     DescribeFleetEvents      Update fleets:    UpdateFleetAttributes     UpdateFleetCapacity     UpdateFleetPortSettings     UpdateRuntimeConfiguration      Manage fleet actions:    StartFleetActions     StopFleetActions     ",
	"input_method": "stdin",
	"parameters":{
		
		
		
		
		    
			"build_id":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"fleet_type":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"server_launch_path":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"log_paths":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"metric_groups":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"server_launch_parameters":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"new_game_session_protection_policy":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"peer_vpc_id":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"description":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"ec2_instance_type":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"instance_role_arn":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"resource_creation_limit_policy":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"runtime_configuration":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"ec2_inbound_permissions":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"name":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"peer_vpc_aws_account_id":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			
	}
}