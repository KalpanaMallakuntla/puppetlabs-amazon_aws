{
	"description": "Creates a DataSource from a database hosted on an Amazon Redshift cluster. A DataSource references data that can be used to perform either CreateMLModel, CreateEvaluation, or CreateBatchPrediction operations. CreateDataSourceFromRedshift is an asynchronous operation. In response to CreateDataSourceFromRedshift, Amazon Machine Learning (Amazon ML) immediately returns and sets the DataSource status to PENDING. After the DataSource is created and ready for use, Amazon ML sets the Status parameter to COMPLETED. DataSource in COMPLETED or PENDING states can be used to perform only CreateMLModel, CreateEvaluation, or CreateBatchPrediction operations.   If Amazon ML can't accept the input source, it sets the Status parameter to FAILED and includes an error message in the Message attribute of the GetDataSource operation response.  The observations should be contained in the database hosted on an Amazon Redshift cluster and should be specified by a SelectSqlQuery query. Amazon ML executes an Unload command in Amazon Redshift to transfer the result set of the SelectSqlQuery query to S3StagingLocation. After the DataSource has been created, it's ready for use in evaluations and batch predictions. If you plan to use the DataSource to train an MLModel, the DataSource also requires a recipe. A recipe describes how each input variable will be used in training an MLModel. Will the variable be included or excluded from training? Will the variable be manipulated; for example, will it be combined with another variable or will it be split apart into word combinations? The recipe provides answers to these questions. <?oxy_insert_start author='laurama' timestamp='20160406T153842-0700'>You can't change an existing datasource, but you can copy and modify the settings from an existing Amazon Redshift datasource to create a new datasource. To do so, call GetDataSource for an existing datasource and copy the values to a CreateDataSource call. Change the settings that you want to change and make sure that all required fields have the appropriate values. <?oxy_insert_end>",
	"input_method": "stdin",
	"parameters":{
		
		
		
		
		    
			"data_source_id":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"data_source_name":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"data_spec":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"role_arn":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"compute_statistics":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			
	}
}