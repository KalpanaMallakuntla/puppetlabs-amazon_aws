{
	"description": "Creates a Lambda function. To create a function, you need a deployment package and an execution role. The deployment package contains your function code. The execution role grants the function permission to use AWS services, such as Amazon CloudWatch Logs for log streaming and AWS X-Ray for request tracing. A function has an unpublished version, and can have published versions and aliases. The unpublished version changes when you update your function's code and configuration. A published version is a snapshot of your function code and configuration that can't be changed. An alias is a named resource that maps to a version, and can be changed to map to a different version. Use the Publish parameter to create version 1 of your function from its initial configuration. The other parameters let you configure version-specific and function-level settings. You can modify version-specific settings later with UpdateFunctionConfiguration. Function-level settings apply to both the unpublished and published versions of the function, and include tags (TagResource) and per-function concurrency limits (PutFunctionConcurrency). If another account or an AWS service invokes your function, use AddPermission to grant permission by creating a resource-based IAM policy. You can grant permissions at the function level, on a version, or on an alias. To invoke your function directly, use Invoke. To invoke your function in response to events in other AWS services, create an event source mapping (CreateEventSourceMapping), or configure a function trigger in the other service. For more information, see Invoking Functions.",
	"input_method": "stdin",
	"parameters":{
		
		
		
		
		    
			"code":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"role":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"tracing_config":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"vpc_config":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"environment":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"publish":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"description":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"memory_size":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"timeout":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"dead_letter_config":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"function_name":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"handler":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"kms_key_arn":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"layers":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"runtime":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"tags":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			
	}
}